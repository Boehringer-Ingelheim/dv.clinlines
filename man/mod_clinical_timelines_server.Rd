% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_clinical_timelines.R
\name{mod_clinical_timelines_server}
\alias{mod_clinical_timelines_server}
\title{Create server for \pkg{dv.clinlines} module}
\usage{
mod_clinical_timelines_server(
  module_id,
  data_name,
  dataset_list,
  basic_info = default_basic_info(),
  mapping = default_mapping(),
  drug_admin = default_drug_admin(),
  filter = NULL,
  subjid_var = "USUBJID",
  start_day = NULL,
  ms = 1000,
  receiver_id = NULL,
  afmm_param = NULL
)
}
\arguments{
\item{module_id}{\verb{[character(1)]}

A unique ID string to create a namespace. Must match the ID of
\code{mod_clinical_timelines_UI()}.}

\item{data_name}{\verb{[shiny::reactive(character(1)]}

A reactive string name of the selected set of dataset. Usually obtained
from module manager.}

\item{dataset_list}{\verb{[shiny::reactive(list(data.frame+))]}

A reactive list of named datasets. Usually obtained from module
manager.}

\item{basic_info}{\verb{[list(character(1)+)]}

A list of four elements: \code{data}, \code{trt_start},
\code{trt_end}, and \code{icf_date}. Assigns the name
of a subject level dataset and column names of treatment start and end, and informed
consent variables.}

\item{mapping}{\verb{[list(list(list(character(1)+)))]}

A list of lists. It serves as instruction on which event to take from
which data domain / dataset, and further from which variables to take the start and
end values, etc., that will be plotted as clinical timelines. Elements need to follow
a certain structure that is described in the Details section below.}

\item{drug_admin}{\verb{[list(character(1)+) | NULL]}

A list of named character strings that describes which variables to
use to display drug administration events. Set it to NULL to deactivate them.}

\item{filter}{\verb{[list(list(character(1)+)) | NULL]}

A list that specifies information for local adverse events filters.
Set to \code{NULL} (default) for no filters.}

\item{subjid_var}{\verb{[character(1)]}

Character name of the unique subject identifier column in
all datasets (default is USUBJID). Must be a single value.}

\item{start_day}{\verb{[integer(1) | NULL]}

A single integer indicating the lower x-axis limit in case of study day display.
Defaults to NULL, using the day of the earliest event to be displayed.}

\item{ms}{\verb{[numeric(1)]}

Single numeric value indicating how many milliseconds to wait before the plot
re-renders. Defaults to 1000.}

\item{receiver_id}{\verb{[character(1) | NULL]}

Character string defining the ID of the module to which to send a subject ID. The
module must exist in the module list. The default is NULL which disables communication.}

\item{afmm_param}{\verb{[list]}

Named list of a selection of arguments from module manager. Expects
at least two elements: \code{utils} and \code{module_names} defining a character vector
whose entries have the corresponding module IDs as names.}
}
\value{
A reactive subject id string in a list for communication between modules with
an attribute code that contains the code to be used by the export functionality of
dv.manager.
}
\description{
\code{mod_clinical_timelines_server} acts as central for managing the
communication between main view and local filter module.
}
\details{
The \code{basic_info} list must contain the following elements:
\itemize{
\item{\code{data}: Character name of the subject level analysis dataset
(e.g. "adsl", "dm") as it is called in the datalist that is provided to the
\pkg{modulemanager}.}
\item{\code{trt_start}: Character name of the variable that contains
treatment start dates which must be present in the dataset mentioned in the
\code{data} element.}
\item{\code{trt_end}: Character name of the variable that contains
treatment end dates which must be present in the dataset mentioned in the
\code{data} element.}
\item{\code{icf_date}: Character name of the variable that contains
informed consent dates which must be present in the dataset mentioned in the
\code{data} element.}
}

\cr

The list provided to \code{mapping} must follow a strict hierarchy. It must contain
one entry per dataset/domain that serves as basis for the events. These entries need to
be named according to the names of the datalist that is provided to the
\pkg{modulemanager}. The entries by oneself must again be lists. \cr
These second level lists contain the variable names that are needed to plot the events,
gathered in yet another lists, which are named according to the labels that shall be
assigned to each event, and that contain the following elements each:
\itemize{
\item{\code{start_dt_var}: Character name of the variable that contains
either the event start dates (for interval events) or merely timepoints (e.g.
milestones). The variable name must be present in the dataset under which the
event is listed.}
\item{\code{end_dt_var}: Character name of the variable that contains
the event end dates. Needs to be provided for interval events, but set to
\code{NULL} for timepoints. The variable name must be present in the dataset under
which the event is listed.}
\item{\code{start_dy_var}: Similar to \code{start_dt_var}, but refers to the study
relative days (instead of dates). The variable name must be present in the dataset
under which the event is listed. Can be set to \code{NULL} to let the module
calculate the study days according to SDTM standard rules.}
\item{\code{end_dy_var}: Similar to \code{end_dt_var}, but refers to the study
relative days (instead of dates). The variable name must be present in the dataset
under which the event is listed. Can be set to \code{NULL} to let the module
calculate the study days according to SDTM standard rules.}
\item{\code{detail_var}: Character name of the variable that contains further
descriptive information that shall be displayed for the event. Can be set to
\code{NULL} for no further information.}
}

The structure of the \code{mapping} parameters for one single event is mentioned below.
It is possible to define multiple events for one dataset, and multiple datasets in
the mapping list.

\code{mapping = list(}\cr
\verb{  }\code{<data name> = list}(\cr
\verb{  }\verb{  }\code{<event label> = list}(\cr
\verb{  }\verb{  }\verb{  }\code{start_dt_var = <variable name>,}\cr
\verb{  }\verb{  }\verb{  }\code{end_dt_var = <variable name or NULL>,}\cr
\verb{  }\verb{  }\verb{  }\code{start_dy_var = <variable name or NULL>,}\cr
\verb{  }\verb{  }\verb{  }\code{end_dy_var = <variable name or NULL>,}\cr
\verb{  }\verb{  }\verb{  }\code{detail_var = <variable name or NULL>}\cr
\verb{  }\verb{  }\code{)}\cr
\verb{  }\code{)}\cr
\code{)}

\cr

If not NULL, the \code{drug_admin} list must contain the following elements:
\itemize{
\item{\code{name}: Character name of the dataset that holds drug administration data
(e.g. ex domain), as it is called in the datalist that is provided to the
\pkg{modulemanager}.}
\item{\code{start_var}: Character name of the variable that contains the start dates
(e.g. exposure start dates) which must be present in the dataset mentioned in the
\code{name} element.}
\item{\code{end_var}: Character name of the variable that contains the end dates
(e.g. exposure end dates) which must be present in the dataset mentioned in the
\code{name} element.}
\item{\code{detail_var}: Character name of the variable that contains the treatment
information. Must exist in the dataset mentioned in the \code{name} element.}
\item{\code{label}: Free-text character label for the drug administration event.}
\item{\code{exp_dose}: Character name of the variable that contains the dosis level
information. Must exist in the dataset mentioned in the \code{name} element.}
\item{\code{exp_dose_unit}: Character name of the variable that contains the dosis
unit. Must exist in the dataset mentioned in the \code{name} element.}
}

\cr

If not \code{NULL}, \code{filter} defines local filters.
So far, the following filters for adverse events are available:
\itemize{
\item{\code{serious_AE}: Filter for serious adverse events.}
\item{\code{soc}: Filter for system organ classes.}
\item{\code{pref_term}: Filter for preferred terms.}
\item{\code{drug_rel_AE}: Filter for drug related adverse events.}
}
The \code{filter} parameter must be a list that contains yet another list for adverse
events filters, that is named \code{ae_filter}, and that holds the following elements:
\itemize{
\item{\code{data_name}: Character name of the adverse events dataset. Must be
available in in the datalist that is provided to the \pkg{modulemanager}.}
\item{\code{label}: Character value which is exactly the same as the name for the
adverse events event defined in \code{mapping}.}
\item{\code{serious_AE}: Character name of the adverse events variable that contains
serious adverse events flags (Y/N).}
\item{\code{soc}: Character name of the adverse events variable that contains
system organ classes.}
\item{\code{pref_term}: Character name of the adverse events variable that contains
preferred terms.}
\item{\code{drug_rel_AE}: Character name of the adverse events variable that contains
drug related (causality) flags (Y/N).}
}
}
\seealso{
\code{\link[=mod_clinical_timelines]{mod_clinical_timelines()}} and \code{\link[=mod_clinical_timelines_UI]{mod_clinical_timelines_UI()}},
\code{\link[=set_basic_info]{set_basic_info()}}, \code{\link[=set_event]{set_event()}}, \code{\link[=set_drug_admin]{set_drug_admin()}}
}
